{"version":3,"file":"component---src-templates-blog-list-js-b58b990bb7f721304221.js","mappings":"sMAOMA,EAAAA,SAAAA,GAAAA,SAAAA,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,YAAAA,KA8EH,OA9EGA,EAAAA,EAAAA,GAAAA,EAAAA,GAAAA,EAAAA,UACJC,OAAA,WACE,IAAQC,EAASC,KAAKC,MAAdF,KACFG,EAAYH,EAAKI,KAAKC,aAAaC,MACnCC,EAAQP,EAAKQ,kBAAkBC,MACrC,EAAkCR,KAAKC,MAAMQ,YAArCC,EAAR,EAAQA,YACFC,EAA0B,IAAhBD,EACVE,EAASF,IAFf,EAAqBG,SAGfC,EAAWJ,EAAc,GAAM,EAAI,KAAOA,EAAc,GAAGK,WAC3DC,GAAYN,EAAc,GAAGK,WAEnC,OACE,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEV,MAAOH,EACPe,SAAU,CAAC,OAAD,iCAEZ,uBAAKC,UAAU,wBACZZ,EAAMa,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACNC,EAAUC,GAAAA,CACdF,EAAKG,YAAYC,KACjB,0BAEIC,EAAQH,GAAAA,CAAOF,EAAKG,YAAYG,IAAK,0BACrCF,EAAOH,EAAQM,OAAR,WACPC,EAAUP,EAAQQ,GAAG,iBAAiBF,OAA5B,SACVG,EAAUT,EAAQQ,GAAG,iBAAiBF,OAA5B,SACVI,EAASN,EAAMI,GAAG,iBAAiBF,OAA1B,SACTK,EAASP,EAAMI,GAAG,iBAAiBF,OAA1B,SACf,OACE,2BAAST,UAAU,OAAOe,IAAKb,EAAKc,OAAOC,MACxCf,EAAKG,YAAYa,KAChBhB,EAAKG,YAAYa,IAAIC,iBACrBjB,EAAKG,YAAYa,IAAIC,gBAAgBC,iBACnC,gBAAC,EAAAC,KAAD,CACEC,GAAIpB,EAAKc,OAAOC,KAChBjB,UAAU,iBACVuB,MAAO,CACLC,gBAAgB,OAAQtB,EAAKG,YAAYa,IAAIC,gBAAgBC,gBAAgBK,OAAOC,SAASC,IAA9E,OAIvB,uBAAK3B,UAAU,gBACb,sBAAIA,UAAU,cACZ,gBAAC,EAAAqB,KAAD,CAAMC,GAAIpB,EAAKc,OAAOC,MAAOf,EAAKG,YAAYlB,QAEhD,yBAAIe,EAAK0B,SACT,wBAAM5B,UAAU,aACbM,EADH,KACWI,EADX,IACqBG,EADrB,UACoCD,EADpC,IAC8CE,EAD9C,cAOR,uBAAKd,UAAU,aACb,uBAAKA,UAAU,aAAa6B,KAAK,cAC/B,2BACIpC,GACA,yBACE,gBAAC,EAAA4B,KAAD,CAAMC,GAAI1B,EAAUkC,IAAI,OAAO9B,UAAU,eAAzC,oBAKJ,2BACEN,GACA,yBACE,gBAAC,EAAA2B,KAAD,CAAMC,GAAIxB,EAAUgC,IAAI,OAAO9B,UAAU,eAAzC,sBAWjB,EA9EGrB,CAAkBoD,EAAAA,WAiFxB","sources":["webpack://flexible-gatsby/./src/templates/blog-list.js"],"sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport DefaultLayout from '../components/layout'\nimport SEO from '../components/seo'\nimport moment from 'moment-timezone'\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n    const { currentPage, numPages } = this.props.pageContext\n    const isFirst = currentPage === 1\n    const isLast = currentPage === numPages\n    const prevPage = currentPage - 1 === 1 ? '/' : (currentPage - 1).toString()\n    const nextPage = (currentPage + 1).toString()\n\n    return (\n      <DefaultLayout>\n        <SEO\n          title={siteTitle}\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <div className=\"content-box clearfix\">\n          {posts.map(({ node }) => {\n            const m_start = moment(\n              node.frontmatter.date,\n              'YYYY-MM-DD hh:mm:ss ZZ'\n            )\n            const m_end = moment(node.frontmatter.end, 'YYYY-MM-DD hh:mm:ss ZZ')\n            const date = m_start.format(`MMMM DD`)\n            const time_UK = m_start.tz('Europe/London').format(`HH:mm`)\n            const time_CH = m_start.tz('Europe/Zurich').format(`HH:mm`)\n            const end_UK = m_end.tz('Europe/London').format(`HH:mm`)\n            const end_CH = m_end.tz('Europe/Zurich').format(`HH:mm`)\n            return (\n              <article className=\"post\" key={node.fields.slug}>\n                {node.frontmatter.img &&\n                  node.frontmatter.img.childImageSharp &&\n                  node.frontmatter.img.childImageSharp.gatsbyImageData && (\n                    <Link\n                      to={node.fields.slug}\n                      className=\"post-thumbnail\"\n                      style={{\n                        backgroundImage: `url(${node.frontmatter.img.childImageSharp.gatsbyImageData.images.fallback.src})`,\n                      }}\n                    />\n                  )}\n                <div className=\"post-content\">\n                  <h2 className=\"post-title\">\n                    <Link to={node.fields.slug}>{node.frontmatter.title}</Link>\n                  </h2>\n                  <p>{node.excerpt}</p>\n                  <span className=\"post-date\">\n                    {date}, {time_UK}-{end_UK} (UK), {time_CH}-{end_CH} (CH)\n                  </span>\n                </div>\n              </article>\n            )\n          })}\n          <div className=\"container\">\n            <nav className=\"pagination\" role=\"navigation\">\n              <ul>\n                {!isFirst && (\n                  <p>\n                    <Link to={prevPage} rel=\"prev\" className=\"newer-posts\">\n                      ← Previous Page\n                    </Link>\n                  </p>\n                )}\n                <p></p>\n                {!isLast && (\n                  <p>\n                    <Link to={nextPage} rel=\"next\" className=\"older-posts\">\n                      Next Page →\n                    </Link>\n                  </p>\n                )}\n              </ul>\n            </nav>\n          </div>\n        </div>\n      </DefaultLayout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query blogPageQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          timeToRead\n          frontmatter {\n            date\n            end\n            title\n            img {\n              childImageSharp {\n                gatsbyImageData(\n                  placeholder: BLURRED\n                  layout: FULL_WIDTH\n                  formats: [AUTO, AVIF, WEBP]\n                )\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","pageContext","currentPage","isFirst","isLast","numPages","prevPage","toString","nextPage","keywords","className","map","node","m_start","moment","frontmatter","date","m_end","end","format","time_UK","tz","time_CH","end_UK","end_CH","key","fields","slug","img","childImageSharp","gatsbyImageData","Link","to","style","backgroundImage","images","fallback","src","excerpt","role","rel","React"],"sourceRoot":""}